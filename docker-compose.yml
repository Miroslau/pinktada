version: "3"

services:
  frontend:
    container_name: frontend
    build:
      context: ./pinktdata-frontend
      dockerfile: Dockerfile.dev
    environment:
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - ./pinktdata-frontend/src:/app/src

  backend:
    container_name: backend
    build:
      context: ./pinktada-backend
      dockerfile: Dockerfile.dev
    environment:
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - ./pinktada-backend/src:/app/src

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - 80:80
    depends_on:
      - frontend
      - backend
  mongo:
    image: mongo
    container_name: mongo
    restart: on-failure
    ports:
      - 27017:27017
    command: mongod
    volumes:
      - ./mongo-db:/data/db

  db:
    image: postgres
    container_name: db
    restart: always
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
